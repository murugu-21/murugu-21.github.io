{"version":3,"file":"component---src-pages-index-js-c9fe38c0d0ad25bb8985.js","mappings":"mIA+GA,IApGY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,EAA0BC,EAAAA,SAAe,MAAlCC,EAAP,KAAcC,EAAd,KASA,OAPAF,EAAAA,WAAgB,WACdE,EAASC,OAAOC,SAChBD,OAAOE,iBAAmB,WACxBH,EAASC,OAAOC,YAEjB,IAGD,gCACE,uBAAKE,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUClB,MAAAA,OAAA,EAAAA,EAAQmB,OACP,6CACoB,IAClB,qBAAGC,KAAI,yBAAyBjB,MAAAA,OAAA,EAAAA,EAAQkB,UAAR,KAC9B,8BAASrB,EAAOmB,OAElB,4BACCnB,MAAAA,OAAA,EAAAA,EAAQsB,UAAW,OAI1B,uBAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,IAAK,SACxD,qBACEN,KAAK,+BACLF,IAAI,mCAEO,UAAVb,EACC,gBAAC,EAAAM,EAAD,CACEC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,sBAPN,qBAUE,gBAAC,EAAAP,EAAD,CACAC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,6BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,sBAPJ,uBAWN,qBACEE,KAAK,wDACLF,IAAI,0CAEJ,gBAAC,EAAAP,EAAD,CACEC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,+BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,6BAPN,2B,kIC7FJS,EAAe,CACnBZ,MAAO,OACPa,QAAS,aACTC,SAAU,UACVC,aAAc,SACdC,OAAQ,oCACRC,gBAAiB,0BACjBC,MAAO,qBAGM,SAASC,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzC,OACE,yBACEC,GAAG,SACHC,KAAK,SACL,aAAW,iCACX5B,UAAU,SACVa,MAAOI,EACPY,MAAOJ,EACPK,QAASJ,ICnBf,IAAMK,EAAa,CACjBjB,QAAS,OACTkB,WAAY,SACZZ,aAAc,QACda,YAAa,SAGTC,EAAkB,CACtBhB,QAAQ,SACRiB,YAAa,OACbd,OAAQ,+BAGJe,EAAmB,CACvBtB,QAAS,OACTkB,WAAY,SACZb,SAAU,OACVG,gBAAiB,sBACjBC,MAAO,QACPH,aAAc,kBACdF,QAAS,SACTmB,UAAW,WAGPC,EAAe,CACnBC,QAAS,EACTC,SAAU,WACVC,KAAM,YAGO,SAASC,EAAT,GAA0D,IAA3CC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,YAAqC,IAAxBC,UAAAA,OAAwB,MAAZ,SAAY,EACtE,OACE,gCACGD,GACC,yBACE/B,MAAOyB,EACPV,KAAK,WACLkB,QAASH,EAAII,SACbrB,SAAUkB,EACV5C,UAAW4C,GAAe,MAC1BjB,GAAE,OAASgB,EAAIlC,KACfoB,MAAOc,EAAIlC,OAGf,yBACEuC,QAASJ,GAAW,OAAWD,EAAIlC,KACnCI,MAAK,iBAAOkB,EAAP,CAAmBc,UAAWA,KAEnC,wBACEhC,MAAK,iBACAqB,EADA,CAEHd,aAA2B,MAAbuB,EAAIM,MAAgB,kBAAoB,WAGvDN,EAAIlC,MAENkC,EAAIM,OAAS,uBAAKpC,MAAOuB,GAAmBO,EAAIM,SCxDzD,IAAMC,EAAiB,CACrBpC,QAAS,OACTqC,SAAU,QAGG,SAASC,EAAT,GAAmD,IAAjCC,EAAgC,EAAhCA,KAAMT,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,UAClD,OACE,uBAAKhC,MAAOqC,GACTG,EAAKC,KAAI,SAAAX,GACR,OACE,gBAACD,EAAD,CACEG,UAAWA,EACXU,IAAKZ,EAAIlC,KACTkC,IAAKA,EACLC,YAAaA,Q,cCwGzB,EAjHiB,SAAC,GAAc,IAAZxD,EAAW,EAAXA,KAChB,GAAwCoE,EAAAA,EAAAA,UAAS,IAA1CC,EAAP,KAAqBC,EAArB,KACMC,EAAQvE,EAAKwE,kBAAkBC,MAE/BR,EAAOS,OAAOC,QAChBJ,EAAMK,QAAO,SAACC,EAAQC,GAAU,IAAD,IAC/B,iBAAOA,EAAKC,mBAAZ,iBAAO,EAAkBd,YAAzB,aAAO,EAAwBW,QAAO,SAACI,EAAWzB,GAAS,IAAD,EACtD,OAAO,OAAP,UAAYyB,IAAZ,MAAwBzB,IAAOyB,EAAUzB,IAAQ,GAAK,EAAtD,MACDsB,KACA,KAEFX,KAAI,kBAAoB,CAAE7C,KAAtB,KAA4BwC,MAA5B,SACJoB,MAAK,SAACC,EAAGC,GACV,OAAID,EAAErB,QAAUsB,EAAEtB,MAAcqB,EAAE7D,KAAO8D,EAAE9D,KAAO,GAAK,EAChD6D,EAAErB,MAAQsB,EAAEtB,MAAQ,GAAK,KAE/BK,KAAI,SAAAX,GACL,OAAO,OAAP,UAAYA,EAAZ,CAAiBI,SAAUU,EAAae,SAAS7B,EAAIlC,WAG3D,GAAsC+C,EAAAA,EAAAA,UAAS,IAAxCiB,EAAP,KAAoBC,EAApB,KACMC,EAAgBhB,EAAMiB,QAAO,SAAAV,GAAS,IAAD,YACzC,QACG,UAAAA,EAAKC,mBAAL,mBAAkBU,aAAlB,eAAyBC,cAAcN,SAASC,MAAhD,UACCP,EAAKC,mBADN,iBACC,EAAkBY,mBADnB,aACC,EAA+BD,cAAcN,SAASC,UACZ,KAAzC,UAAOP,EAAKC,mBAAZ,aAAO,EAAkBY,eAAzB,UAAwDb,EAAKc,eAA7D,aAAwD,EACrDF,cACDN,SAASC,OACW,IAAxBhB,EAAawB,QACZf,EAAKC,YAAYd,KAAK6B,MAAK,SAAAvC,GAAG,OAAIc,EAAae,SAAS7B,UAa5D,OACE,gCACE,gBAACnB,EAAD,CACEC,MAAOgD,EACP/C,SAAU,SAAAyD,GAAC,OAAIT,EAAeS,EAAEC,OAAOvD,UAEzC,gBAACuB,EAAD,CAAQC,KAAMA,EAAMT,YAf1B,YAAsC,IAAXwC,EAAU,EAAVA,OACzB1B,GAAgB,SAAA2B,GACd,OAAIA,EAASb,SAASY,EAAOvD,OACpBwD,EAAST,QAAO,SAAAjC,GAAG,OAAIyC,EAAOvD,QAAUc,KAEzC,GAAN,eAAW0C,GAAX,CAAqBD,EAAOvD,cAW5B,sBAAIhB,MAAO,CAAEyE,UAAU,SACpBX,EAAcrB,KAAI,SAAAY,GACjB,IAAMW,EAAQX,EAAKC,YAAYU,OAASX,EAAKqB,OAAOC,KAEpD,OACE,sBAAIjC,IAAKW,EAAKqB,OAAOC,MACnB,2BACExF,UAAU,iBACVyF,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAI1B,EAAKqB,OAAOC,KAAMK,SAAS,OACnC,wBAAMA,SAAS,YAAYhB,KAG/B,6BACGX,EAAKC,YAAY2B,KADpB,OAESC,EAAAA,EAAAA,GAAkB7B,EAAK8B,YAAe,KAE/C,uBACEnF,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,IAAK,SAGNkD,EAAKC,YAAYd,KAAKC,KAAI,SAACX,EAAKsD,GAC/B,OACE,uBACEpF,MAAO,CACLM,SAAU,oBACVE,OAAQ,6BACRH,QAAS,OAEXqC,IAAK0C,GAEJtD,QAMX,+BACE,qBACEuD,wBAAyB,CACvBC,OAAQjC,EAAKC,YAAYY,aAAeb,EAAKc,SAE/Ca,SAAS,uBAQG,IAAzBlB,EAAcM,QACb,qBAAGjF,UAAU,qBAAb,+BC9FV,EAZkB,SAAC,GAAwB,IAAD,EAArBZ,EAAqB,EAArBA,KAAMgH,EAAe,EAAfA,SACnBC,GAAY,UAAAjH,EAAKG,KAAKC,oBAAV,eAAwBqF,QAAxB,QAElB,OACE,gBAAC,IAAD,CAAQuB,SAAUA,EAAUvB,MAAOwB,GACjC,gBAAC,IAAD,CAAKxB,MAAM,cACX,gBAAC,EAAD,CAAUzF,KAAMA,IAChB,gBAAC,IAAD,S,qBChBC,SAAS2G,EAAkBO,GAChC,IAAIC,EAAOC,KAAKC,MAAMH,EAAU,GAChC,OAAIC,EAAO,EACC,IAAIG,MAAMF,KAAKC,MAAMF,EAAOC,KAAKG,IACxCC,KAAK,MACLC,KAAK,IAFR,IAEeP,EAFf,YAIU,IAAII,MAAMH,GAAQ,GAAGK,KAAK,MAAMC,KAAK,IAA/C,IAAsDP,EAAtD,Y","sources":["webpack://blog/./src/components/bio.js","webpack://blog/./src/components/searchBar.js","webpack://blog/./src/components/tag.js","webpack://blog/./src/components/tagBar.js","webpack://blog/./src/components/AllPosts.js","webpack://blog/./src/pages/index.js","webpack://blog/./src/utils/helpers.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  const [theme, setTheme] = React.useState(null)\r\n  \r\n  React.useEffect(() => {\r\n    setTheme(window.__theme)\r\n    window.__onThemeChange2 = () => {\r\n      setTheme(window.__theme)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bio\">\r\n        <StaticImage\r\n          className=\"bio-avatar\"\r\n          layout=\"fixed\"\r\n          formats={[\"auto\", \"webp\", \"avif\"]}\r\n          src=\"../images/profile-pic.png\"\r\n          width={50}\r\n          height={50}\r\n          quality={95}\r\n          alt=\"Profile picture\"\r\n        />\r\n        {author?.name && (\r\n          <p>\r\n            technical blog by{\" \"}\r\n            <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n              <strong>{author.name}</strong>\r\n            </a>\r\n            <br></br>\r\n            {author?.summary || null}\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"1rem\" }}>\r\n        <a\r\n          href=\"https://github.com/murugu-21\"\r\n          alt=\"link to author's github profile\"\r\n        >\r\n          {theme === \"light\" ? (\r\n            <StaticImage\r\n              layout=\"fixed\"\r\n              formats={[\"auto\", \"webp\", \"avif\"]}\r\n              src=\"../images/Github-dark.png\"\r\n              width={32}\r\n              height={32}\r\n              quality={95}\r\n              alt=\"Github profile link\"\r\n            />\r\n          ) : (\r\n              <StaticImage\r\n              layout=\"fixed\"\r\n              formats={[\"auto\", \"webp\", \"avif\"]}\r\n              src=\"../images/Github-light.png\"\r\n              width={32}\r\n              height={32}\r\n              quality={95}\r\n              alt=\"Github profile link\"\r\n            />\r\n          )}\r\n        </a>\r\n        <a\r\n          href=\"https://stackoverflow.com/users/15790108/murugappan-m\"\r\n          alt=\"link to author's stackoverflow profile\"\r\n        >\r\n          <StaticImage\r\n            layout=\"fixed\"\r\n            formats={[\"auto\", \"webp\", \"avif\"]}\r\n            src=\"../images/stack-overflow.png\"\r\n            width={32}\r\n            height={32}\r\n            quality={95}\r\n            alt=\"stackoverflow profile link\"\r\n          />\r\n        </a>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React from \"react\"\r\nimport \"./search.css\"\r\n\r\nconst SEARCH_STYLE = {\r\n  width: \"100%\",\r\n  padding: \".25em .5em\",\r\n  fontSize: \"1.25rem\",\r\n  borderRadius: \"0.5rem\",\r\n  border: \"0.1rem solid var(--color-primary)\",\r\n  backgroundColor: \"var(--color-background)\",\r\n  color: \"var(--color-text)\"\r\n}\r\n\r\nexport default function SearchBar({ query, onChange }) {\r\n  return (\r\n    <input\r\n      id=\"search\"\r\n      type=\"search\"\r\n      aria-label=\"search article by tag or title\"\r\n      className=\"search\"\r\n      style={SEARCH_STYLE}\r\n      value={query}\r\n      onInput={onChange}\r\n    />\r\n  )\r\n}\r\n","import \"./tag.css\"\r\nimport React from \"react\"\r\n\r\nconst TAG_STYLES = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  borderRadius: \".25em\",\r\n  marginRight: \".75em\",\r\n}\r\n\r\nconst TAG_NAME_STYLES = {\r\n  padding: `0 .5em`,\r\n  borderRight: \"none\",\r\n  border: \"1px solid var(--color-text)\",\r\n}\r\n\r\nconst TAG_COUNT_STYLES = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  fontSize: \".8em\",\r\n  backgroundColor: \"var(--color-accent)\",\r\n  color: \"white\",\r\n  borderRadius: \"0 .25em .25em 0\",\r\n  padding: \"0 .5em\",\r\n  alignSelf: \"stretch\",\r\n}\r\n\r\nconst INPUT_STYLES = {\r\n  opacity: 0,\r\n  position: \"absolute\",\r\n  left: \"-99999px\",\r\n}\r\n\r\nexport default function Tag({ tag, onTagSelect, marginTop = \".875em\" }) {\r\n  return (\r\n    <>\r\n      {onTagSelect && (\r\n        <input\r\n          style={INPUT_STYLES}\r\n          type=\"checkbox\"\r\n          checked={tag.selected}\r\n          onChange={onTagSelect}\r\n          className={onTagSelect && \"tag\"}\r\n          id={`tag-${tag.name}`}\r\n          value={tag.name}\r\n        />\r\n      )}\r\n      <label\r\n        htmlFor={onTagSelect && `tag-${tag.name}`}\r\n        style={{ ...TAG_STYLES, marginTop: marginTop }}\r\n      >\r\n        <span\r\n          style={{\r\n            ...TAG_NAME_STYLES,\r\n            borderRadius: tag.count != null ? \".25em 0 0 .25em\" : \".25em\",\r\n          }}\r\n        >\r\n          {tag.name}\r\n        </span>\r\n        {tag.count && <div style={TAG_COUNT_STYLES}>{tag.count}</div>}\r\n      </label>\r\n    </>\r\n  )\r\n}\r\n","import Tag from \"./tag\"\r\nimport React from \"react\"\r\n\r\nconst WRAPPER_STYLES = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n}\r\n\r\nexport default function TagBar({ tags, onTagSelect, marginTop }) {\r\n  return (\r\n    <div style={WRAPPER_STYLES}>\r\n      {tags.map(tag => {\r\n        return (\r\n          <Tag\r\n            marginTop={marginTop}\r\n            key={tag.name}\r\n            tag={tag}\r\n            onTagSelect={onTagSelect}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport SearchBar from \"../components/searchBar\"\r\nimport TagBar from \"../components/tagBar\"\r\n\r\nimport { formatReadingTime } from \"../utils/helpers\"\r\n\r\nconst AllPosts = ({ data }) => {\r\n    const [selectedTags, setSelectedTags] = useState([])\r\n    const posts = data.allMarkdownRemark.nodes\r\n    \r\n    const tags = Object.entries(\r\n        posts.reduce((totals, post) => {\r\n        return post.frontmatter?.tags?.reduce((tagTotals, tag) => {\r\n            return { ...tagTotals, [tag]: (tagTotals[tag] || 0) + 1 }\r\n        }, totals)\r\n        }, {})\r\n    )\r\n        .map(([name, count]) => ({ name, count }))\r\n        .sort((a, b) => {\r\n        if (a.count === b.count) return a.name > b.name ? 1 : -1\r\n        return a.count < b.count ? 1 : -1\r\n        })\r\n        .map(tag => {\r\n        return { ...tag, selected: selectedTags.includes(tag.name) }\r\n        })\r\n  \r\n  const [searchQuery, setSearchQuery] = useState(\"\")\r\n  const filteredPosts = posts.filter(post => {\r\n    return (\r\n      (post.frontmatter?.title?.toLowerCase().includes(searchQuery) ||\r\n        post.frontmatter?.description?.toLowerCase().includes(searchQuery) ||\r\n        (typeof post.frontmatter?.description === 'undefined' && post.excerpt\r\n          ?.toLowerCase()\r\n          .includes(searchQuery))) &&\r\n      (selectedTags.length === 0 ||\r\n        post.frontmatter.tags.some(tag => selectedTags.includes(tag)))\r\n    )\r\n  })\r\n  \r\n  function handleTagSelect({ target }) {\r\n    setSelectedTags(prevTags => {\r\n      if (prevTags.includes(target.value)) {\r\n        return prevTags.filter(tag => target.value !== tag)\r\n      } else {\r\n        return [...prevTags, target.value]\r\n      }\r\n    })\r\n  }\r\n    return (\r\n      <>\r\n        <SearchBar\r\n          query={searchQuery}\r\n          onChange={e => setSearchQuery(e.target.value)}\r\n        />\r\n        <TagBar tags={tags} onTagSelect={handleTagSelect} />\r\n        <ol style={{ listStyle: `none` }}>\r\n          {filteredPosts.map(post => {\r\n            const title = post.frontmatter.title || post.fields.slug\r\n            \r\n            return (\r\n              <li key={post.fields.slug}>\r\n                <article\r\n                  className=\"post-list-item\"\r\n                  itemScope\r\n                  itemType=\"http://schema.org/Article\"\r\n                >\r\n                  <header>\r\n                    <h2>\r\n                      <Link to={post.fields.slug} itemProp=\"url\">\r\n                        <span itemProp=\"headline\">{title}</span>\r\n                      </Link>\r\n                    </h2>\r\n                    <small>\r\n                      {post.frontmatter.date}\r\n                      {` • ${formatReadingTime(post.timeToRead)}`}{\" \"}\r\n                    </small>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        gap: \"10px\",\r\n                      }}\r\n                    >\r\n                      {post.frontmatter.tags.map((tag, idx) => {\r\n                        return (\r\n                          <div\r\n                            style={{\r\n                              fontSize: \"var(--fontSize-0)\",\r\n                              border: \"1px solid var(--color-box)\",\r\n                              padding: \"2px\",\r\n                            }}\r\n                            key={idx}\r\n                          >\r\n                            {tag}\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </header>\r\n                  <section>\r\n                    <p\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: post.frontmatter.description || post.excerpt,\r\n                      }}\r\n                      itemProp=\"description\"\r\n                    />\r\n                  </section>\r\n                </article>\r\n              </li>\r\n            )\r\n          })}\r\n        </ol>\r\n        {filteredPosts.length === 0 && (\r\n          <p className=\"post-list-item h2\">No matching article found</p>\r\n        )}\r\n      </>\r\n    )\r\n}\r\n \r\nexport default AllPosts;","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport AllPosts from \"../components/AllPosts\"\r\n\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  \r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"All posts\" />\r\n      <AllPosts data={data}/>\r\n      <Bio />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        timeToRead\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          tags\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","export function formatReadingTime(minutes) {\r\n  let cups = Math.round(minutes / 5)\r\n  if (cups > 5) {\r\n    return `${new Array(Math.round(cups / Math.E))\r\n      .fill(\"🍱\")\r\n      .join(\"\")} ${minutes} min read`\r\n  } else {\r\n    return `${new Array(cups || 1).fill(\"☕️\").join(\"\")} ${minutes} min read`\r\n  }\r\n}\r\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","React","theme","setTheme","window","__theme","__onThemeChange2","className","S","layout","formats","src","width","height","quality","alt","name","href","twitter","summary","style","display","flexDirection","gap","SEARCH_STYLE","padding","fontSize","borderRadius","border","backgroundColor","color","SearchBar","query","onChange","id","type","value","onInput","TAG_STYLES","alignItems","marginRight","TAG_NAME_STYLES","borderRight","TAG_COUNT_STYLES","alignSelf","INPUT_STYLES","opacity","position","left","Tag","tag","onTagSelect","marginTop","checked","selected","htmlFor","count","WRAPPER_STYLES","flexWrap","TagBar","tags","map","key","useState","selectedTags","setSelectedTags","posts","allMarkdownRemark","nodes","Object","entries","reduce","totals","post","frontmatter","tagTotals","sort","a","b","includes","searchQuery","setSearchQuery","filteredPosts","filter","title","toLowerCase","description","excerpt","length","some","e","target","prevTags","listStyle","fields","slug","itemScope","itemType","Link","to","itemProp","date","formatReadingTime","timeToRead","idx","dangerouslySetInnerHTML","__html","location","siteTitle","minutes","cups","Math","round","Array","E","fill","join"],"sourceRoot":""}