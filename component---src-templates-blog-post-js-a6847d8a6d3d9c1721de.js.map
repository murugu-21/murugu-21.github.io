{"version":3,"file":"component---src-templates-blog-post-js-a6847d8a6d3d9c1721de.js","mappings":"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","sources":["webpack://blog/./src/components/bio.js","webpack://blog/./src/templates/blog-post.js","webpack://blog/./src/utils/helpers.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  const [theme, setTheme] = React.useState(null)\n\n  React.useEffect(() => {\n    setTheme(window.__theme)\n    window.__onThemeChange2 = () => {\n      setTheme(window.__theme)\n    }\n  }, [])\n\n  return (\n    <>\n      <div className=\"bio\">\n        <StaticImage\n          className=\"bio-avatar\"\n          layout=\"fixed\"\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          src=\"../images/profile-pic.png\"\n          width={50}\n          height={50}\n          quality={95}\n          alt=\"Profile picture\"\n        />\n        {author?.name && (\n          <p>\n            technical blog by{\" \"}\n            <a href={`https://twitter.com/${social?.twitter || ``}`}>\n              <strong>{author.name}</strong>\n            </a>\n            <br></br>\n            {author?.summary || null}\n          </p>\n        )}\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"1rem\" }}>\n        <a\n          href=\"https://github.com/murugu-21\"\n          alt=\"link to author's github profile\"\n        >\n          {theme === \"light\" ? (\n            <StaticImage\n              layout=\"fixed\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              src=\"../images/Github-dark.png\"\n              width={32}\n              height={32}\n              quality={95}\n              alt=\"Github profile link dark\"\n            />\n          ) : (\n            <StaticImage\n              layout=\"fixed\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              src=\"../images/Github-light.png\"\n              width={32}\n              height={32}\n              quality={95}\n              alt=\"Github profile link light\"\n            />\n          )}\n        </a>\n        <a\n          href=\"https://stackoverflow.com/users/15790108/murugappan-m\"\n          alt=\"link to author's stackoverflow profile\"\n        >\n          <StaticImage\n            layout=\"fixed\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            src=\"../images/stack-overflow.png\"\n            width={32}\n            height={32}\n            quality={95}\n            alt=\"stackoverflow profile link\"\n          />\n        </a>\n      </div>\n    </>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nimport { formatReadingTime } from \"../utils/helpers\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>\n            {post.frontmatter.date}\n            {` ‚Ä¢ ${formatReadingTime(post.timeToRead)}`}{\" \"}\n          </p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5)\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill(\"üç±\")\n      .join(\"\")} ${minutes} min read`\n  } else {\n    return `${new Array(cups || 1).fill(\"‚òïÔ∏è\").join(\"\")} ${minutes} min read`\n  }\n}\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","React","theme","setTheme","window","__theme","__onThemeChange2","className","S","layout","formats","src","width","height","quality","alt","name","href","twitter","summary","style","display","flexDirection","gap","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","minutes","cups","Math","round","Array","E","fill","join"],"sourceRoot":""}